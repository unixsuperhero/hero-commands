
class TmuxSubcommand
  include ShellCommandable

  let(:sessions) {
    HeroHelper.output_lines_from(*'tmux ls'.shellsplit).map{|l|
      next unless l[/^\S[^:]*:/]
      l.sub(/:.*/, '')
    }.compact
  }

  register_subcommand(:commands) {
    cmds = HeroHelper.output_lines_from(*'tmux list-commands'.shellsplit)
    cmds = ListFilter.run(cmds, *args) if args.any?

    if cmds.empty?
      puts 'No matching commands...'
      exit 1
    end

    puts cmds
  }

  register_subcommand(:keys) {
    keys = HeroHelper.output_lines_from(*'tmux list-keys'.shellsplit)
    keys = ListFilter.run(keys, *args) if args.any?

    if keys.empty?
      puts 'No matching keys...'
      exit 1
    end

    puts keys
  }

  register_subcommand(:split) {
    error_exit('Not inside a tmux session...') if ENV['TMUX'].nil?
    HeroHelper.exec_from('tmux', 'splitw')
  }

  register_subcommand(:vsplit) {
    error_exit('Not inside a tmux session...') if ENV['TMUX'].nil?
  }

  register_subcommand(:new, :make, :start, :create) {
    name, path = args.first(2)

    error_exit('A session already exists named: "%s"' % name) if sessions.include?(name)

    cmd = "tmux new #{name.nil? ? '' : "-s #{name}"} #{path && File.directory?(path) && "-c '#{path}'"}".shellsplit
    ap(new_tmux_session_cmd: cmd)

    HeroHelper.exec_from(cmd)
  }

  register_subcommand(:attach, :join) {
    name = args.first

    error_exit("A session-name is required for joining tmux session...") unless name

    sessions = HeroHelper.output_lines_from('tmux', 'ls').map{|l|
      next unless l[/^\S[^:]*:/]
      l.sub(/:.*/, '')
    }

    session_name = sessions.find{|sn| sn[Regexp.new(name, ?i)] }

    error_exit('No session found matching the pattern: "%s"' % name) unless session_name

    cmd = "tmux a -t '#{session_name}'".shellsplit
    ap(join_tmux_session_cmd: cmd)

    HeroHelper.exec_from(cmd)
  }

  register_subcommand(:sessions, :list, :ls) {
    puts sessions
  }
end

MainCommand.register_subcommand(:tmux) {
  TmuxSubcommand.run(MainCommand.args)
}



# vim: ft=ruby
