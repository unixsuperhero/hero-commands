#!/usr/bin/env ruby

require 'awesome_print'
require 'pry'
require 'yaml'

<%= inject_files 'src/lib/hash_ext.rb.erb', 'src/lib/config.rb.erb',
  'src/lib/subcommandable.rb.erb', 'src/lib/path_env.rb.erb',
  'src/lib/hero_helper.rb.erb', 'src/lib/copy_or_paste.rb.erb' %>

class MainCommand < Subcommandable

  def self.editor
    ENV['EDITOR'] || 'vim'
  end

  register_subcommand(:edit) {
    files = args.flat_map{|arg| PathEnv.search(arg) }

    system(editor, *files)
  }

  register_subcommand(:z) { # testing the exit codes for diff
    output = `diff /tmp/diff-test-a /tmp/diff-test-b &>/dev/null`
    ap output: output, sucessful: $?.success?

    output = `diff /tmp/diff-test-a /tmp/diff-test-c &>/dev/null`
    ap output: output, sucessful: $?.success?
    exit 0
  }

  register_subcommand(:fix) {
    unless Object.const_defined?(:FixSubcommand)
      found = PathEnv.find('new_h-fix')
      load found.first
    end

    if Object.const_defined?(:FixSubcommand)
      FixSubcommand.run(args)
      exit 0
    end

    raise Exception, 'Unable to load FixSubcommand'
  }

  # register_subcommand(:git) {
  #   GitSubcommand.run(args)
  # }


end

MainCommand.load_subcommands_by_prefix('h')
MainCommand.run



# vim: ft=ruby