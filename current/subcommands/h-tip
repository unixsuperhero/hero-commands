class TipSubcommand
  include ShellCommandable

  let(:tips_dir) { File.join(Dir.home, 'tips').tap{|dir| `mkdir -pv #{dir.shellescape}` unless File.directory?(dir) } }
  let(:originals_dir) { File.join(tips_dir, 'originals').tap{|dir| `mkdir -pv #{dir.shellescape}` unless File.directory?(dir) } }

  register_subcommand(:new){
    date = Time.now.strftime('%Y%m%d')
    seconds = Time.now.to_i % (60*60*24)
    HeroHelper.run_inside_dir(originals_dir) {
      new_file = format('%s.%s.md', date, seconds)
      while File.exist?(new_file)
        new_file = format('%s.%s.md', date, seconds += 1)
      end

      IO.write new_file, ''
      HeroHelper.edit_in_editor new_file
    }
  }

  register_subcommand(:list){
    HeroHelper.run_inside_dir(originals_dir){
      puts Dir['**/*.md']
    }
  }

end

MainCommand.register_subcommand(:tip) {
  TipSubcommand.run(MainCommand.args)
}

# vim: ft=ruby
