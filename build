#!/usr/bin/env ruby

require 'erb'
require 'awesome_print'

class CommandTemplate
  attr_reader :file

  def initialize(file)
    @file = file
  end

  def inject_files(*files)
    files.flatten.map{|filename|
      if injected_files.include?(filename)
        puts format('Already injected: "%s"', filename)
        next
      end

      injected_files.push(filename)
      render(filename)
    }.compact.join("\n")
  end

  def injected_files
    @injected_files ||= []
  end

  def render(filename=@file)
    ERB.new(IO.read(filename)).result(binding)
  end

  def outfile
    file.sub(%r{src/}, 'current/').sub(%r{[.]erb}, '').tap{|ofile|
      puts format('ofile: "%s"', ofile)
      puts format('dirname: "%s"', File.dirname(ofile))
      `mkdir -pv "#{File.dirname(ofile)}"`
    }
  end

  def save
    IO.write(outfile, render)
  end
end

erb_files = Dir['src/*/**/*.erb'].sort_by{|f| File.basename(f, '.erb') }
ap erb_files: erb_files

ap saves: erb_files.map{|f|
  { f => CommandTemplate.new(f).save }
}.inject(:merge)

# vim: ft=ruby

